/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sisplanperguntas;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;
import sun.applet.Main;

/**
 *
 * @author Suporte
 */
public class RelRespostaPerg extends javax.swing.JFrame {

   

    /**
     * Creates new form RelRespostaPerg
     */
    public RelRespostaPerg() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        Insets in = Toolkit.getDefaultToolkit().getScreenInsets(this.getGraphicsConfiguration()); 

         Dimension d = Toolkit.getDefaultToolkit().getScreenSize(); 

          int width = d.width-(in.left + in.top); 
          int height = d.height-(in.top + in.bottom); 
          setSize(width,height); 
          setLocation(in.left,in.top);
          
          setTitle("Gamification    Relatorio Respostas");
          
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTUsuario_consul = new javax.swing.JTextField();
        consulta = new javax.swing.JButton();
        fecha = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConsultaResposta = new javax.swing.JTable();
        imprimi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Usuario");

        jTUsuario_consul.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTUsuario_consulKeyPressed(evt);
            }
        });

        consulta.setText("Consultar");
        consulta.setToolTipText("");
        consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaActionPerformed(evt);
            }
        });

        fecha.setText("Fechar");
        fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaActionPerformed(evt);
            }
        });

        jTableConsultaResposta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Tempo", "CodPergunta", "Pergunta", "Alternativa", "Certa_Errada", "Nivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableConsultaResposta);

        imprimi.setText("Imprimir");
        imprimi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 959, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTUsuario_consul, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(consulta, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imprimi, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(consulta, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTUsuario_consul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imprimi, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void consultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaActionPerformed
         Connection connection = null;
        Statement statement = null;
        int linha = 0;
        try {
            Class.forName("org.sqlite.JDBC");
            connection = DriverManager.getConnection("jdbc:sqlite:Perguntas.db");
            connection.setAutoCommit(false);
            
            
            if (jTUsuario_consul.getText().equals("")){
            statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery("SELECT * FROM RESPOSTA;");
            
            
            

           //Zera limpa a tabela grid
            DefaultTableModel mode = (DefaultTableModel) jTableConsultaResposta.getModel();
            mode.setRowCount(0);
            
            while (resultSet.next()) {
                String usuario = resultSet.getString("USUARIO");
                String tempo = resultSet.getString("TEMPO");
                int codpergunta = resultSet.getInt("CODPERGUNTA");
                String pergunta = resultSet.getString("PERGUNTA");
                String alternativa_escolhida = resultSet.getString("ALTERNATIVA_ESCOLHIDA");
                String certa_errada = resultSet.getString("CERTA_ERRADA");
                String nivel = resultSet.getString("NIVEL");
                
                //Lista os clientes na tabela (Grid)
                DefaultTableModel model = (DefaultTableModel) jTableConsultaResposta.getModel();
                model.addRow(new Object[]{usuario, tempo, codpergunta, pergunta, alternativa_escolhida, certa_errada, nivel});
                
                linha++;
                
            }
            
            resultSet.close();
            statement.close();            
            connection.close();
            }else{
                statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery("SELECT * FROM RESPOSTA WHERE USUARIO = '"+ jTUsuario_consul.getText() + "'");
            
            
            

           //Zera limpa a tabela grid
            DefaultTableModel mode = (DefaultTableModel) jTableConsultaResposta.getModel();
            mode.setRowCount(0);
            
            while (resultSet.next()) {
                String usuario = resultSet.getString("USUARIO");
                String tempo = resultSet.getString("TEMPO");
                int codpergunta = resultSet.getInt("CODPERGUNTA");
                String pergunta = resultSet.getString("PERGUNTA");
                String alternativa_escolhida = resultSet.getString("ALTERNATIVA_ESCOLHIDA");
                String certa_errada = resultSet.getString("CERTA_ERRADA");
                String nivel = resultSet.getString("NIVEL");
                
                //Lista os clientes na tabela (Grid)
                DefaultTableModel model = (DefaultTableModel) jTableConsultaResposta.getModel();
                model.addRow(new Object[]{usuario, tempo, codpergunta, pergunta, alternativa_escolhida, certa_errada, nivel});
                
                linha++;
                
            }
            
            resultSet.close();
            statement.close();            
            connection.close();
            }
            
        } catch (Exception e) {
            System.err.println(e.getClass().getName() + "erro na consulta de pacientes botão consultar " + e.getMessage());
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_consultaActionPerformed

    private void fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_fechaActionPerformed

    private void jTUsuario_consulKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTUsuario_consulKeyPressed
        int tecla_f4 = evt.getKeyCode();
        if (tecla_f4 == KeyEvent.VK_F4){
            ConsultaUsuarioPerg usuario = new ConsultaUsuarioPerg();
            usuario.TelaConsulta(this);
            usuario.setVisible(true);
            usuario.setLocationRelativeTo(this);
        }
    }//GEN-LAST:event_jTUsuario_consulKeyPressed

    private void imprimiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimiActionPerformed
         for (int i = 0;i < jTableConsultaResposta.getRowCount();i ++){
              
              String usuario      = (String)  jTableConsultaResposta.getValueAt(i, 0);
              String tempo        = (String)  jTableConsultaResposta.getValueAt(i, 1);
              int codpergunta     = (Integer) jTableConsultaResposta.getValueAt(i, 2);
              String pergunta     = (String)  jTableConsultaResposta.getValueAt(i, 3);
              String alternativa  = (String)  jTableConsultaResposta.getValueAt(i, 4);
              String certa_errada = (String)  jTableConsultaResposta.getValueAt(i, 5);
              String nivel        = (String)  jTableConsultaResposta.getValueAt(i, 6);
         
        Properties config = new Properties();
        String arquivo = "SisplanPerguntas.ini";
        
        boolean success = (new File(config.getProperty("Perguntas")+ new SimpleDateFormat("dd-MM-yyyy").format(new Date(System.currentTimeMillis())) +".doc")).delete();
        
        FileOutputStream fos = null;
        try {
            config.load(new FileInputStream(arquivo));
            
            fos = new FileOutputStream(config.getProperty("Perguntas")+ new SimpleDateFormat("dd-MM-yyyy").format(new Date(System.currentTimeMillis())) +".doc", true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(RelRespostaPerg.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Verifique o Caminho do Relatorio Perguntas no arquivo SisplanPerguntas.ini\n"
                    +""+ ex);
        }
        catch (IOException ex) {
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, ex);
      }
         PrintStream ps = new PrintStream(fos);  
         
         ps.println("Nome do Usuario: " + usuario);
         ps.println("Tempo : " + tempo);
         ps.println("Codigo da Pergunta: " + codpergunta);
         ps.println("Pergunta realizada: " + pergunta);
         ps.println("Alternativa Escolhida: " + alternativa);
         ps.println("Resposta: " + certa_errada);
         ps.println("Nivel Pergunta: "+ nivel);
         ps.println(" ");
         }
            
         
        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font("Times New Roman", Font.PLAIN, 20)));//fonte da mensagem
        UIManager.put("OptionPane.messageForeground", Color.BLACK);//cor da fonte da mensagem
        JOptionPane.showMessageDialog(null, "Arquivo Gerado com Sucesso!");
        
        Properties config = new Properties();
        String arquivo = "SisplanPerguntas.ini";
        
         try {
            config.load(new FileInputStream(arquivo));
            
                java.awt.Desktop.getDesktop().open(new File(config.getProperty("Perguntas")+ new SimpleDateFormat("dd-MM-yyyy").format(new Date(System.currentTimeMillis())) +".doc"));
                
                
            } catch (IOException ex) {
                Logger.getLogger(RelRespostaPerg.class.getName()).log(Level.SEVERE, null, ex);
            }
         
            
        
         
    }//GEN-LAST:event_imprimiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelRespostaPerg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelRespostaPerg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelRespostaPerg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelRespostaPerg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelRespostaPerg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton consulta;
    private javax.swing.JButton fecha;
    private javax.swing.JButton imprimi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTUsuario_consul;
    private javax.swing.JTable jTableConsultaResposta;
    // End of variables declaration//GEN-END:variables

    void recebeUsuario(String usuario) {
        jTUsuario_consul.setText(usuario);
    }
}
